{"version":3,"sources":["components/ButtonCP.jsx","components/EditText.jsx","components/EditTextPassword.jsx","repository/login.js","repository/transaction.js","VirtualTerminal.jsx","App.js","index.js"],"names":["ButtonCP","text","style","onPress","TouchableOpacity","View","styles","button","Text","buttonText","StyleSheet","create","minWidth","backgroundColor","borderRadius","paddingHorizontal","paddingVertical","elevation","color","alignSelf","EditText","placeholder","keyboardType","onChangeText","value","onBlur","multiline","maxLength","useState","textInput","newStyle","setNewStyle","TextInput","placeholderTextColor","autoFocus","onFocus","e","textInputFocus","label","marginTop","textAlign","marginStart","marginBottom","fontSize","borderColor","borderWidth","height","fontWeight","outlineStyle","icon","container","flexDirection","alignItems","flex","URL","headers","tenantName","DEVICE_OS","DEVICE_ID","TIMEZONE","IP_ADDRESS","login","username","password","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","Object","assign","body","then","response","json","executeTrx","accessToken","cardConnectToken","undefined","cvv","name","amount","month","year","billingAddress","city","state","zip","email","field","console","log","JSON","stringify","access_token","catch","error","VirtualTerminal","token","type","phoneNumber","expirationDate","setDetails","wait","setWait","process","parse","contextResponse","statusCode","alert","useEffect","ScrollView","subContaier","title","margin","prev","test","toString","marginHorizontal","width","marginEnd","ActivityIndicator","size","buttonMargin","justifyContent","App","setToken","loginHandler","trim","length","passwordMargin","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/app.460f6038.chunk.js","sourcesContent":["import { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\r\n\r\nexport function ButtonCP({ text, style, onPress }) {\r\n  return (\r\n    <TouchableOpacity onPress={onPress}>\r\n      <View style={[styles.button, style]}>\r\n        <View>\r\n          <Text style={styles.buttonText}>{text}</Text>\r\n        </View>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    minWidth: 200,\r\n    backgroundColor: \"#01786E\",\r\n    borderRadius: 8,\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 16,\r\n    elevation: 8,\r\n  },\r\n  buttonText: {\r\n    color: \"#FFF\",\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, TextInput } from \"react-native\";\r\nexport function EditText({\r\n  placeholder,\r\n  keyboardType,\r\n  style,\r\n  onChangeText,\r\n  value,\r\n  onBlur,\r\n  multiline = false,\r\n  maxLength,\r\n}) {\r\n  const [newStyle, setNewStyle] = useState(styles.textInput);\r\n\r\n  return (\r\n    <TextInput\r\n      style={[newStyle, style]}\r\n      placeholder={placeholder}\r\n      placeholderTextColor=\"grey\"\r\n      keyboardType={keyboardType}\r\n      autoFocus={false}\r\n      maxLength={maxLength}\r\n      onBlur={() => {\r\n        onBlur;\r\n        setNewStyle(styles.textInput);\r\n      }}\r\n      onFocus={(e) => {\r\n        setNewStyle(styles.textInputFocus);\r\n      }}\r\n      onChangeText={(text) => onChangeText(text)}\r\n      multiline={multiline}\r\n      value={value}\r\n    />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    marginTop: 16,\r\n    textAlign: \"left\",\r\n    marginStart: 20,\r\n    marginBottom: 4,\r\n    fontSize: 16,\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  textInput: {\r\n    minWidth: 300,\r\n    borderColor: \"#A0A0A0\",\r\n    paddingHorizontal: 16,\r\n    borderWidth: 2,\r\n    height: 55,\r\n    fontSize: 16,\r\n    color: \"#000000\",\r\n    fontWeight: \"600\",\r\n    borderRadius: 4,\r\n    outlineStyle: \"none\",\r\n  },\r\n  textInputFocus: {\r\n    minWidth: 300,\r\n    borderWidth: 2,\r\n    height: 55,\r\n    fontSize: 16,\r\n    color: \"#000000\",\r\n    fontWeight: \"600\",\r\n    borderColor: \"#01786E\",\r\n    paddingHorizontal: 16,\r\n    borderRadius: 4,\r\n    outlineStyle: \"none\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, TextInput, View } from \"react-native\";\r\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\r\n\r\nexport function EditTextPassword({ placeholder, style, onChangeText, onBlur }) {\r\n  const [showPassword, setShowPassword] = useState(true);\r\n  const [icon, setIcon] = useState(\"visibility\");\r\n  const [newStyle, setNewStyle] = useState(styles.container);\r\n\r\n  return (\r\n    <View style={[newStyle, style]}>\r\n      <TextInput\r\n        style={styles.textInput}\r\n        placeholder={placeholder}\r\n        secureTextEntry={showPassword}\r\n        autoFocus={false}\r\n        onBlur={() => {\r\n          onBlur;\r\n          setNewStyle(styles.container);\r\n        }}\r\n        onFocus={(e) => {\r\n          setNewStyle(styles.textInputFocus);\r\n        }}\r\n        onChangeText={(text) => onChangeText(text)}\r\n      />\r\n      <MaterialIcons\r\n        name={icon}\r\n        size={24}\r\n        color=\"#CECECE\"\r\n        style={styles.icon}\r\n        onPress={() => {\r\n          setShowPassword(!showPassword);\r\n          if (icon === \"visibility\") setIcon(\"visibility-off\");\r\n          else setIcon(\"visibility\");\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  icon: {\r\n    paddingHorizontal: 16,\r\n  },\r\n  container: {\r\n    minWidth: 300,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    borderWidth: 2,\r\n    height: 55,\r\n    borderColor: \"#A0A0A0\",\r\n    borderRadius: 4,\r\n  },\r\n  textInput: {\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 16,\r\n    fontSize: 16,\r\n    flex: 1,\r\n    outlineStyle: \"none\",\r\n  },\r\n  textInputFocus: {\r\n    minWidth: 300,\r\n    flexDirection: \"row\",\r\n    borderWidth: 2,\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n    height: 55,\r\n    borderColor: \"#01786E\",\r\n  },\r\n});\r\n","\r\nexport const URL = \"https://api.cloudpayments-staging.com/\";\r\nexport const headers = {\r\n  \"Content-Type\": \"application/json\",\r\n  \"API-KEY\": \"613a606b20808900019edcd6e0d540ed0f9243e89a7393fd0b46ae92\",\r\n  tenantName: \"IBANERA\",\r\n  DEVICE_OS: \"\",\r\n  DEVICE_ID: \"\",\r\n  TIMEZONE: \"\",\r\n  IP_ADDRESS: \"\",\r\n};\r\n\r\nexport const login = async (username, password) => {\r\n\r\n    var details = {\r\n        'username': username,\r\n        'password': password,\r\n        'grant_type': 'password'\r\n    };\r\n\r\n    var formBody = [];\r\n    for (var property in details) {\r\n        var encodedKey = encodeURIComponent(property);\r\n        var encodedValue = encodeURIComponent(details[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    const response = await fetch(URL + \"auth/oauth/token\", {\r\n        method: \"POST\",\r\n        headers: Object.assign({}, headers, {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        }),\r\n        body: formBody,\r\n    }).then(response => response.json());\r\n\r\n    return response\r\n}","import { headers, URL } from \"./login\";\r\n\r\nconst getCardType =(token) => {\r\n    return \"VISA\";\r\n    const first = +token.substring(1, 2)\r\n    const second = +token.substring(2, 3)\r\n    let cardType;\r\n    switch (first) {\r\n        case 4: cardType = \"VISA\"; break\r\n        case 5: cardType = \"MASTERCARD\"; break\r\n        case 3:{\r\n            switch (second) {\r\n                case 7: cardType = \"AMERICANEXPRESS\"; break\r\n                case 0, 8: cardType = \"DINERS\"; break;\r\n                default: cardType = \"JCB\"\r\n            }\r\n        } \r\n        default: cardType =\"DISCOVER\";\r\n    }\r\n\r\n    return cardType\r\n}\r\n\r\nexport const executeTrx = async (accessToken, details) => {\r\n\r\n    let body = {\r\n        \"contextRequest\": {},\r\n        \"details\": {\r\n            \"name\": \"NONACCOUNT\",\r\n            \"details\":{\r\n                \"name\": \"CVT\",\r\n                \"field\":[\r\n                    {\r\n                        \"key\":\"SP_accountNumberClear\",\r\n                        \"value\": details.cardConnectToken\r\n                    }, \r\n                    {\r\n                        \"key\":\"IS_CARD_TOKENIZED\",\r\n                        \"value\": details.cvv === undefined?\"YES\":\"NO\"\r\n                    },\r\n                    {\r\n                        \"key\":\"RSP_AC_CARD_TYPE\",\r\n                        \"value\": getCardType(details.cardConnectToken)\r\n                    },\r\n                    {\r\n                        \"key\":\"STORE_CUSTOMER_PROFILE\",\r\n                        \"value\":\"NO\"\r\n                    },\r\n                    {\r\n                        \"key\":\"RSP_AC_CARD_HOLDER_FULL_NAME\",\r\n                        \"value\": details.name\r\n                    },\r\n                    {\r\n                        \"key\":\"AMOUNT\",\r\n                        \"value\":details.amount\r\n                    },\r\n                    {\r\n                        \"key\":\"CURRENCY_CODE\",\r\n                        \"value\":\"840\"\r\n                    },\r\n                    {\r\n                        \"key\":\"RSP_AC_EXPIRE_MONTH\",\r\n                        \"value\": details.month\r\n                    },\r\n                    {\r\n                        \"key\":\"RSP_AC_EXPIRE_YEAR\",\r\n                        \"value\": details.year\r\n                    },\r\n                    {\r\n                        \"key\":\"RSP_AC_CARD_HOLDER_ADDRESS_LINE1\",\r\n                        \"value\": details.billingAddress\r\n                    },\r\n                    {\r\n                        \"key\":\"RSP_AC_CARD_HOLDER_ADDRESS_CITY\",\r\n                        \"value\":details.city\r\n                    },\r\n                    {\r\n                        \"key\":\"RSP_AC_CARD_HOLDER_ADDRESS_STATE\",\r\n                        \"value\": details.state\r\n                    },\r\n                    {\r\n                        \"key\":\"RSP_AC_CARD_HOLDER_ADDRESS_COUNTRY\",\r\n                        \"value\":\"US\"\r\n                    },\r\n                    {\r\n                        \"key\":\"RSP_AC_CARD_HOLDER_ADDRESS_POSTALCODE\",\r\n                        \"value\":details.zip\r\n                    },\r\n                    {\r\n                        \"key\":\"RSP_AC_CARD_HOLDER_EMAIL\",\r\n                        \"value\": details.email\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    if(details.cvv !== undefined)\r\n        body.details.details.field.push({\r\n            'key': 'SP_AC_CREDIT_CARD_CVV',\r\n            'value': details.cvv\r\n        })\r\n\r\n        console.log(JSON.stringify(body))\r\n\r\n    const response = await fetch(URL + \"fundz-ms/user/executeTrx\", {\r\n        method: \"POST\",\r\n        headers: Object.assign({}, headers, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${accessToken.access_token}`\r\n        }),\r\n        body: JSON.stringify(body),\r\n    }).then(response => response.text())\r\n    .catch(error => \"Please try it again.\");\r\n\r\n    return response\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n} from \"react-native\";\r\nimport { ButtonCP } from \"./components/ButtonCP\";\r\nimport { EditText } from \"./components/EditText\";\r\nimport { executeTrx } from \"./repository/transaction\";\r\n\r\nexport const VirtualTerminal = ({ token, type }) => {\r\n  const [details, setDetails] = useState({\r\n    name: \"\",\r\n    billingAddress: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"12345\",\r\n    email: \"\",\r\n    phoneNumber: \"8106883711\",\r\n    amount: \"\",\r\n    expirationDate: \"\",\r\n    month: \"01\",\r\n    year: \"2023\",\r\n    cardConnectToken: \"4111111111111111\",\r\n    cvv: \"123\",\r\n  });\r\n\r\n  const [wait, setWait] = useState(true);\r\n\r\n  const setName = (value) => {\r\n    setDetails((prev) => ({ ...prev, name: value }));\r\n  };\r\n\r\n  const setBillingAddress = (value) => {\r\n    setDetails((prev) => ({ ...prev, billingAddress: value }));\r\n  };\r\n\r\n  const setCity = (value) => {\r\n    setDetails((prev) => ({ ...prev, city: value }));\r\n  };\r\n\r\n  const setState = (value) => {\r\n    setDetails((prev) => ({ ...prev, state: value }));\r\n  };\r\n\r\n  const setZip = (value) => {\r\n    setDetails((prev) => ({ ...prev, zip: value }));\r\n  };\r\n\r\n  const setEmail = (value) => {\r\n    setDetails((prev) => ({ ...prev, email: value }));\r\n  };\r\n\r\n  const setPhoneNumber = (value) => {\r\n    if (/^\\d+$/.test(value.toString()))\r\n      setDetails((prev) => ({ ...prev, phoneNumber: value }));\r\n  };\r\n\r\n  const setCVV = (value) => {\r\n    console.log(/^\\d+$/.test(value.toString()));\r\n    if (/^\\d+$/.test(value.toString()))\r\n      setDetails((prev) => ({ ...prev, cvv: value }));\r\n  };\r\n\r\n  const setAmount = (value) => {\r\n    if (/^\\d+$/.test(value.toString()))\r\n      setDetails((prev) => ({ ...prev, amount: value }));\r\n  };\r\n\r\n  const setMonth = (value) => {\r\n    if (/^\\d+$/.test(value.toString()))\r\n      setDetails((prev) => ({ ...prev, month: value }));\r\n  };\r\n\r\n  const setYear = (value) => {\r\n    if (/^\\d+$/.test(value.toString()))\r\n      setDetails((prev) => ({ ...prev, year: value }));\r\n  };\r\n\r\n  const cardConnectCallBack = (value) => {\r\n    if (/^\\d+$/.test(value.toString()))\r\n      setDetails((prev) => ({ ...prev, cardConnectToken: value }));\r\n  };\r\n\r\n  const process = async () => {\r\n    setWait(true);\r\n    const response = await executeTrx(token, details);\r\n    console.log(JSON.parse(response));\r\n    if (JSON.parse(response).contextResponse.statusCode === \"SUCCESS\")\r\n      alert(\"Payment Processed Successfully \");\r\n    else alert(response);\r\n    setWait(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (type === \"FIS\") setWait(false);\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.subContaier}>\r\n        <Text style={styles.title}>All fields are required</Text>\r\n\r\n        <EditText\r\n          placeholder=\"Name on card\"\r\n          keyboardType=\"default\"\r\n          style={styles.margin}\r\n          onChangeText={setName}\r\n        />\r\n        <EditText\r\n          placeholder=\"Billing Address\"\r\n          keyboardType=\"default\"\r\n          style={styles.margin}\r\n          onChangeText={setBillingAddress}\r\n          value={details.billingAddress}\r\n        />\r\n        <EditText\r\n          placeholder=\"City\"\r\n          keyboardType=\"default\"\r\n          style={styles.margin}\r\n          onChangeText={setCity}\r\n          value={details.city}\r\n        />\r\n        <EditText\r\n          placeholder=\"State\"\r\n          keyboardType=\"default\"\r\n          style={styles.margin}\r\n          onChangeText={setState}\r\n          value={details.state}\r\n        />\r\n        <EditText\r\n          placeholder=\"Zip / Postal Code\"\r\n          keyboardType=\"default\"\r\n          style={styles.margin}\r\n          onChangeText={setZip}\r\n          value={details.zip}\r\n        />\r\n        <EditText\r\n          placeholder=\"Email Address\"\r\n          keyboardType=\"email-address\"\r\n          style={styles.margin}\r\n          onChangeText={setEmail}\r\n          value={details.email}\r\n        />\r\n        <EditText\r\n          placeholder=\"Phone Number\"\r\n          keyboardType=\"numeric\"\r\n          style={styles.margin}\r\n          onChangeText={setPhoneNumber}\r\n          value={details.phoneNumber}\r\n        />\r\n        <EditText\r\n          placeholder=\"Card Number\"\r\n          keyboardType=\"numeric\"\r\n          style={styles.margin}\r\n          maxLength={16}\r\n          onChangeText={cardConnectCallBack}\r\n          value={details.cardConnectToken}\r\n        />\r\n        <EditText\r\n          maxLength={3}\r\n          placeholder=\"CVV\"\r\n          keyboardType=\"numeric\"\r\n          style={styles.margin}\r\n          onChangeText={setCVV}\r\n          value={details.cvv}\r\n        />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            marginHorizontal: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <EditText\r\n            style={{ width: 146, minWidth: 146, marginEnd: 4 }}\r\n            maxLength={2}\r\n            keyboardType=\"numeric\"\r\n            onChangeText={setMonth}\r\n            value={details.month}\r\n          />\r\n          <EditText\r\n            style={{ width: 146, minWidth: 146, marginStart: 4 }}\r\n            maxLength={4}\r\n            keyboardType=\"numeric\"\r\n            onChangeText={setYear}\r\n            value={details.year}\r\n          />\r\n        </View>\r\n        <EditText\r\n          placeholder=\"Amount USD\"\r\n          keyboardType=\"numeric\"\r\n          style={styles.margin}\r\n          onChangeText={setAmount}\r\n          value={details.amount}\r\n        />\r\n        {wait ? (\r\n          <ActivityIndicator size={\"large\"} style={styles.buttonMargin} />\r\n        ) : (\r\n          <ButtonCP\r\n            text=\"Process Transaction\"\r\n            style={styles.buttonMargin}\r\n            onPress={process}\r\n          />\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontSize: 18,\r\n    color: \"red\",\r\n  },\r\n  margin: {\r\n    marginTop: 8,\r\n  },\r\n  buttonMargin: {\r\n    margin: 16,\r\n    marginTop: 32,\r\n  },\r\n  label: {\r\n    marginTop: 16,\r\n    textAlign: \"left\",\r\n    marginStart: 20,\r\n    marginBottom: 4,\r\n    fontSize: 16,\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  subContaier: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n  },\r\n});\r\n","\nimport { useEffect, useState } from 'react';\nimport { ActivityIndicator, StyleSheet, Text, View } from 'react-native';\nimport { ButtonCP } from './components/ButtonCP';\nimport { EditText } from './components/EditText';\nimport { EditTextPassword } from './components/EditTextPassword';\nimport { login } from './repository/login';\nimport { VirtualTerminal } from './VirtualTerminal';\n\nexport default function App() {\n\n  const [username, setUsername] = useState(\"merchantfismg\")\n  const [password, setPassword] = useState(\"Newc12345!\")\n  const [wait, setWait] = useState(false)\n  const [token, setToken] = useState()\n  const [type, setType] = useState()\n\n  const loginHandler = async () => {\n\n    if(username.trim().length === 0 || password.trim().length === 0 ){\n      return\n    }\n    setWait(true)\n\n    const response = await login(username, password)\n    console.log(response)\n    setWait(false)\n    if(response.access_token)\n      setToken(response)\n  }\n\n  return (\n    <View style={styles.container}>\n        {token === undefined? <>\n           <Text style={styles.passwordMargin} >Initiate payment</Text>\n            {wait? <ActivityIndicator size={'large'} style={styles.buttonMargin}/>:<ButtonCP text=\"Start\" style={styles.buttonMargin} onPress={loginHandler}/>}\n          </>\n          : <VirtualTerminal token={token} type={\"FIS\"}/>\n        }\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonMargin: {\n      marginTop: 32\n  },\n  passwordMargin: {\n    marginTop: 8\n  },\n}\n);","import { AppRegistry } from \"react-native\";\n\nimport App from './App';\n\nAppRegistry.registerComponent(\"App\", () => App);\nAppRegistry.runApplication(\"App\", {\n  rootTag: document.getElementById(\"root\")\n});"],"sourceRoot":""}